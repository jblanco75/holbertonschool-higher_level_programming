# 1-my_list.txt

========================================
"""Edge case tests for "1-my_list.py" """
========================================

COMMON FILE CASES:

    >>> MyList = __import__('1-my_list').MyList


      ---- Check that the file is executable ----
    >>> import os
    >>> os.access('1-my_list.py', os.X_OK)
    True

    ---- Check for the documentation of the module ----
    >>> len(__import__("1-my_list").__doc__) > 10
    True

    ---- Check for the documentation of the function ----
    >>> len(__import__("1-my_list").MyList.__doc__) > 10
    True

    ---- Check for pep8 style ----
    >>> os.popen("pep8 1-my_list.py").read()
    ''

    ---- Check for a newline at the end of the file ----
    >>> os.popen("cat -e 1-my_list.py | tail -1").read()[-1]
    '\n'

    ---- Check for the file has a shebang ----
    >>> os.popen("cat 1-my_list.py | head -1").read()
    '#!/usr/bin/python3\n'

    ---- Check that the README file exists ----
    >>> cwd = os.getcwd()
    >>> check_readme = cwd + '/README.md'
    >>> os.path.exists(check_readme)
    True

COMMON USE CASES:


       >>> mlist = MyList([0, 2, 4, 6])
       >>> print(mlist)
       [0, 2, 4, 6]


       >>> mlist = MyList([-2, -4, 10, 3])
       >>> mlist.print_sorted()
       [-4, -2, 3, 10]


       >>> mlist = MyList()
       >>> mlist.print_sorted([1, 2])
       Traceback (most recent call last):
       TypeError: print_sorted() takes 1 positional argument but 2 were given


       >>> mlist = MyList()
       >>> mlist.print_sorted()
       []


       >>> mlist = MyList([0, 1])
       >>> mlist.append(-1)
       >>> print(mlist)
       [0, 1, -1]
       >>> MyList.print_sorted(mlist)
       [-1, 0, 1]
       >>> print(mlist)
       [0, 1, -1]
